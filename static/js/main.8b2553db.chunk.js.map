{"version":3,"sources":["components/api/ImagesAPI.js","components/Searchbar.js","components/Modal.js","components/ImageGalerryItem.js","components/ImageGallery.js","components/ButtonLoadMore.js","components/Loader.js","components/App.js","index.js"],"names":["getImagesFromApi","searchQuery","page","axios","get","then","resp","data","hits","Searchbar","state","inputValue","inputHandler","e","setState","target","value","onSubmitHandler","preventDefault","onSearch","props","this","className","onSubmit","type","onChange","autoComplete","autoFocus","placeholder","Component","ModalWindow","closeModal","src","tags","onClick","alt","GalleryItem","isModalOpen","openModal","window","addEventListener","nodeName","key","removeEventListener","largeImageURL","Modal","GalleryList","gallery","map","image","id","webformatURL","ButtonLoadMore","clickFunc","LoaderReact","color","height","width","App","currentPage","loading","error","searchImagesHandler","loadHandler","response","prev","catch","finally","prevProps","prevState","snapshot","scrollTo","top","document","documentElement","scrollHeight","behavior","Loader","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8b2553db.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst getImagesFromApi = (searchQuery, page)=>{\r\n    const keyAPI = '17975511-a1a75a89facdad63fcb9c5ee1';\r\n    return axios\r\n    .get(`https://pixabay.com/api/?q=${searchQuery}&page=${page}&key=${keyAPI}&image_type=photo&orientation=horizontal&per_page=12`)\r\n    .then(resp => resp.data.hits)\r\n}\r\n\r\nexport default getImagesFromApi;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Searchbar extends Component {\r\n  state = {\r\n    inputValue: \"\",\r\n  };\r\n\r\n  inputHandler = e =>{\r\n      this.setState({inputValue: e.target.value})\r\n  }\r\n\r\n  onSubmitHandler = e =>{\r\n      e.preventDefault();\r\n      const {onSearch}= this.props;\r\n      onSearch(this.state.inputValue);\r\n      this.setState({inputValue:''});\r\n  }\r\n\r\n  render() {\r\n    const { inputValue } = this.state;\r\n    return (<header className=\"Searchbar\">\r\n      <form className=\"SearchForm\" onSubmit={this.onSubmitHandler}>\r\n        <button type=\"submit\" className=\"SearchForm-button\">\r\n          <span className=\"SearchForm-button-label\">Search</span>\r\n        </button>\r\n\r\n        <input\r\n        onChange={this.inputHandler}\r\n          className=\"SearchForm-input\"\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          value={inputValue}\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n        />\r\n      </form>\r\n    </header>)\r\n  }\r\n}\r\n\r\nexport default Searchbar;\r\n","import React from \"react\";\r\n\r\nconst ModalWindow = ({closeModal, src, tags}) => {\r\n  \r\n  return (\r\n    <div className=\"Overlay\" onClick={closeModal}>\r\n      <div className=\"Modal\">\r\n        <img src={src} alt={tags} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalWindow;\r\n","import React, { Component } from \"react\";\r\nimport ModalWindow from \"./Modal\";\r\n\r\nclass GalleryItem extends Component {\r\n  state = {\r\n    isModalOpen: false,\r\n  };\r\n\r\n  openModal = () => {\r\n    this.setState({ isModalOpen: true });\r\n    window.addEventListener(\"keydown\", this.closeModal);\r\n  };\r\n\r\n  closeModal = (e) => {\r\n    if (e.target.nodeName !== \"IMG\" || e.key === \"Escape\") {\r\n      this.setState({ isModalOpen: false });\r\n      window.removeEventListener(\"keydown\", this.closeModal);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { isModalOpen } = this.state;\r\n    const { alt, src, largeImageURL } = this.props;\r\n    return (\r\n      <li className=\"ImageGalleryItem\" onClick={this.openModal}>\r\n        <img src={src} alt={alt} className=\"ImageGalleryItem-image\" />\r\n        {isModalOpen ? (\r\n          <ModalWindow\r\n            closeModal={this.closeModal}\r\n            src={largeImageURL}\r\n            alt={alt}\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GalleryItem;\r\n","import React from \"react\";\r\nimport GalleryItem from './ImageGalerryItem.js';\r\n\r\nconst GalleryList = ({ gallery }) => {\r\n  return <ul className=\"ImageGallery\">\r\n{gallery.map(image =>\r\n   <GalleryItem key={image.id} alt={image.tags} src={image.webformatURL} largeImageURL={image.largeImageURL}/>\r\n   )}\r\n  </ul>;\r\n};\r\n\r\nexport default GalleryList;\r\n","import React from 'react';\r\n\r\n\r\nconst ButtonLoadMore = ({clickFunc})=>{\r\n   return (\r\n   <button className=\"Button\" onClick={clickFunc}>Load more...</button>\r\n   )\r\n}\r\n\r\nexport default ButtonLoadMore;","import React from \"react\";\r\n\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nconst LoaderReact = () => {\r\n  return (\r\n    <div>\r\n      <Loader type=\"Puff\" color=\"#00BFFF\" height={100} width={100} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoaderReact;","import React, { Component } from \"react\";\r\nimport \"./../styles.css\";\r\nimport getImagesFromApi from \"./api/ImagesAPI.js\";\r\nimport Searchbar from \"./Searchbar.js\";\r\nimport GalleryList from \"./ImageGallery.js\";\r\nimport ButtonLoadMore from \"./ButtonLoadMore.js\";\r\nimport LoaderReact from \"./Loader.js\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    gallery: [],\r\n    currentPage: 0,\r\n    searchQuery: \"\",\r\n    loading: false,\r\n    error: null,\r\n    isModalOpen: false,\r\n  };\r\n\r\n  searchImagesHandler = (searchQuery) => {\r\n    this.setState({ searchQuery, currentPage: 1, gallery: [] });\r\n  };\r\n\r\n  loadHandler = () => {\r\n    const { searchQuery, currentPage } = this.state;\r\n\r\n    return getImagesFromApi(searchQuery, currentPage)\r\n      .then((response) => {\r\n        return this.setState((prev) => ({\r\n          gallery: [...prev.gallery, ...response],\r\n          currentPage: prev.currentPage + 1,\r\n        }));\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ error });\r\n      })\r\n      .finally(() => {\r\n        this.setState({ loading: false });\r\n      });\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    const { searchQuery, currentPage } = this.state;\r\n    if (prevState.currentPage !== currentPage) {\r\n      window.scrollTo({\r\n        top: document.documentElement.scrollHeight,\r\n        behavior: \"smooth\",\r\n      });\r\n    }\r\n    if (prevState.searchQuery !== searchQuery) {\r\n      this.loadHandler();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { gallery, loading } = this.state;\r\n    return (\r\n      <>\r\n        <Searchbar onSearch={this.searchImagesHandler} />\r\n        {loading && <LoaderReact />}\r\n        {gallery.length > 0 && <GalleryList gallery={gallery} />}\r\n        {gallery.length > 0 && <ButtonLoadMore clickFunc={this.loadHandler} />}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}